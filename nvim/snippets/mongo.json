{
  "mongoose Model ": {
    "prefix": "mongoSchema",
    "body": [
      "const { Schema, model } = require('mongoose')",
      "const uniqueValidator = require('mongoose-unique-validator')",
      "import mongoosePaginate from 'mongoose-paginate-v2'",
      "const ${1:nameSchema} = new Schema({",
      "  username: {",
      "    type: String,",
      "    required:true,",
      "    trim :true",
      "    unique: true,",
      "  },",
      " rol: {",
      "    type: String,",
      "    enum: [\"admin\", \"user\"],",
      "    default: \"user\",",
      "  },",
      "  passwordHash: String,",
      "  date: Date,",
      "  important: Boolean,",
      "  notes: [{",
      "    type: Schema.Types.ObjectId,",
      "    ref: 'Note'",
      "  }]",
      "}, {",
      "    timestamps: true,",
      "    versionKey: false,",
      "  })",
      "${1:nameSchema}.set('toJSON', {",
      "  transform: (document, returnedObject) => {",
      "    returnedObject.id = returnedObject._id",
      "    delete returnedObject._id",
      "    delete returnedObject.passwordHash",
      "  }",
      "})",
      "",
      "${1:nameSchema}.plugin(uniqueValidator)",
      "${1:nameSchema}.plugin(mongoosePaginate)",
      "const ${2:User} = model('${3:User}', ${1:nameSchema})",
      "",
      "module.exports = ${2:User}"
    ],
    "description": "mongoose Model "
  },
  "mongoose Connect": {
    "prefix": "mongoConnect",
    "body": [
      "const mongoose = require( \"mongoose\")",
      "",
      "const connectionString =",
      "  process.env.NODE_ENV === \"production\"",
      "    ? process.env.MONGO_URI",
      "    : process.env.MONGO_URI_DEV",
      "",
      "mongoose",
      "  .connect(connectionString || \"\")",
      "  .then((data) => {",
      "    const name = data.connections[0].name",
      "    console.log(`Connected  MongoDB data base : ${name}`)",
      "  })",
      "  .catch((error) => {",
      "    console.log(error)",
      "  })",
      "",
      "process.on(\"SIGINT\", () => {",
      "  mongoose.connection.close(() => {",
      "    console.log(",
      "      \"Mongoose default connection disconnected through app termination\"",
      "    )",
      "    process.exit(0)",
      "  })",
      "})",
      ""
    ],
    "description": "mongoose Connect"
  }
}

